
@************************************ Created By Jerin Jahan (Date: 02.02.2017) ****************************************************************@

@model FactoryManagement.Models.View_VoucherInfo
@{
    ViewBag.Title = "CreateVoucher";
    Layout = "~/Views/Shared/_LayoutForTemplate.cshtml";
    FactoryManagement.Models.FactoryManagementEntities db = new FactoryManagement.Models.FactoryManagementEntities();
    var currency = Request.Cookies["CookieAdminInfo"].Values["currencySymbol"].ToString();
}

<div class="form-horizontal col-md-12 col-sm-12 col-xs-12" id="Div_For_Voucher_Create">
    <div class="form-group">
        <label class="control-label col-md-3 col-sm-4">Voucher Name</label>
        <div class="col-md-5 col-sm-6" style="padding-top:7px;">@Model.VoucherTitle</div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-3 col-sm-4">Voucher Type</label>
        <div class="col-md-5 col-sm-6" style="padding-top:7px;">@Model.VoucherTypeName</div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-3 col-sm-4">Voucher Amount</label>
        <div class="col-md-5 col-sm-6" style="padding-top:7px;">@currency @Model.TotalAmount</div>
    </div>
    @if (Model.VoucherTypeId < 3)
    {
        <div class="form-group">
            <label class="control-label col-md-3 col-sm-4">Internal Account</label>
            <div class="col-md-5 col-sm-6">
                @(Html.Kendo().DropDownList().Name("InternalAccId")
                      .OptionLabel("--Select One Type--")
                      .DataTextField("AccountName1")
                      .DataValueField("AccId")
                      .Events(e => e.Change("onInternalAccChange"))
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetInternalAcc", "Voucher", new { typeId = Model.VoucherTypeId });
                          });
                      })
                      .HtmlAttributes(new { style = "width:100%" })
                )
                <span class="field-validation-valid text-danger" data-valmsg-for="InternalAccId" data-valmsg-replace="true"></span>
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            <label class="control-label col-md-3 col-sm-4">Bank Account</label>
            <div class="col-md-5 col-sm-6">
                @(Html.Kendo().DropDownList().Name("BankAccId")
                      .OptionLabel("--Select One Type--")
                      .DataTextField("AccountNumber")
                      .Events(e => e.Change("onBankAccChange"))
                      .DataValueField("BankAccountId")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetBankAcc", "Voucher", new { typeId =Model.VoucherTypeId});
                          });
                      })
                      .HtmlAttributes(new { style = "width:100%" })
                )
                <span class="field-validation-valid text-danger" data-valmsg-for="BankAccId" data-valmsg-replace="true"></span>
            </div>
        </div>
    }
    <div class="form-group" id="Div_For_Selected_Acc" style="display:none;">
        <label class="control-label col-md-3 col-sm-4">Current Balance</label>
        <div class="col-md-5 col-sm-6" style="padding-top:7px;"><span id="lbl_Acc_Amnt"></span></div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-3 col-md-6 col-sm-offset-4 col-sm-8">
            <input type="submit" value="Confirm" class="k-button k-state-default" id="btn_acc_connect" />
            <input type="button" value="Refresh" class="k-button k-state-default" id="btn_acc_refresh" />
            <input type="button" value="Cancel" class="k-button k-state-default" id="btn_acc_cancel" />
        </div>
    </div>
</div>
<script>
    var accId = 0,amnt=0;
    $(document).ready(function () {
        $("#liForAccounting").addClass('active');
        $("#liForVoucherList").addClass('sublistActive');
        $("#top_header_link").append('<span>Finance</span><span><i class="fa fa-angle-right fa-2x"></i></span>' +
            '<span><a href="/Voucher/VoucherList"> All Voucher List </a></span><span><i class="fa fa-angle-right fa-2x"></i></span>' +
           '<span class="current">Connect Account Details</span>');
    });
    $("#btn_acc_refresh").click(function () { location.reload()});
    $("#btn_acc_cancel").click(function () { window.history.back(); });
</script>
<script>
    function onInternalAccChange(e) {
        var id = e.sender.element[0].id;
        var dataItem = this.dataItem(e.item);
        amnt=0;
        if (dataItem.AccId === "") {
            $("#Div_For_Selected_Acc").hide();
            $("#lbl_Acc_Amnt").text('');
            accId = 0;
        } else {
            accId = dataItem.AccId;
            $("#lbl_Acc_Amnt").text(Currency + '' + dataItem.Balance);
            $("#Div_For_Selected_Acc").show();
            if (parseFloat('@(Model.TotalAmount)') > parseFloat(dataItem.Balance)) {
                $("#btn_acc_connect").prop('disabled', true);
            } else {
                amnt=dataItem.Balance;
                $("#btn_acc_connect").prop('disabled', false);
            }
        }
    }
    function onBankAccChange(e) {
        var id = e.sender.element[0].id;
        var dataItem = this.dataItem(e.item);amnt=0;
        if (dataItem.BankAccountId === "") {
            $("#Div_For_Selected_Acc").hide();
            $("#lbl_Acc_Amnt").text('');
            accId = 0;amnt=0;
        } else {
            accId = dataItem.BankAccountId;
            $("#lbl_Acc_Amnt").text(Currency + '' + dataItem.Balance);
            $("#Div_For_Selected_Acc").show();
            if (parseFloat('@(Model.TotalAmount)') > parseFloat(dataItem.Balance)) {
                $("#btn_acc_connect").prop('disabled', true);
            } else {
                amnt=dataItem.Balance;
                $("#btn_acc_connect").prop('disabled', false);
            }
        }
    }
</script>
<script>
    $("#btn_acc_connect").click(function () {
        notification.show({ message: "Voucher information is saving...", showTime: startTime() }, "upload-progress");
        var sendData = {
            voucherId: '@(Model.VoucherId)',
            accId: accId,
            amnt: '@(Model.TotalAmount)',
            userId: userId
        };
        $.ajax({
            url: '@Url.Action("SaveConnectedAmount", "Voucher")',
            type: 'Post',
            data: sendData,
            success: function (data) {
                notification.hide();notification.setOptions({ autoHideAfter: 5000 });
                if (data === "Error") {
                    notification.show({ message: "Information save was unsuccessful.", showTime: startTime() }, "upload-error");
                } else {
                    notification.show({ message: "Information has been successfully saved.", showTime: startTime() }, "upload-success");
                    location.href = ('@Url.Action("VoucherList","Voucher")');
                }
            },
            error: function (err) {
                notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                notification.show({ message: "Error occurred.", showTime: startTime() }, "upload-warning");
            }
        });
    });
</script>