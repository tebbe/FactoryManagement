
@model FactoryManagement.ModelView.CRM.ClientListModelView
@Html.HiddenFor(m => m.CientContactId)

<div class="k-edit-form-container" id="divForNewContactAdd">
    <div class="editor-label"><label for="Contact">Contact</label></div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "k-textbox", style = "width:100%", @type = "tel" } })
        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label"><label for="ContactTypeId">Contact Type</label></div>
    <div class="editor-field">
            @(Html.Kendo().DropDownList()
                  .Name("ContactTypeId")
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .OptionLabel("--Select Type--")
                  .BindTo(new List<SelectListItem>() {
                   new SelectListItem() {
                    Text = "Land",
                    Value = "1"
                   },
                   new SelectListItem() {
                    Text = "Mobile",
                    Value = "2"
                   }
                  })
                 .HtmlAttributes(new { style = "width: 100%" })
            )
        @Html.ValidationMessageFor(model => model.ContactTypeId, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label"><label for="Comments">Comments</label></div>
    <div class="editor-field">
            @Html.TextAreaFor(model => model.Comments, new { cols = 60, rows = 4, @class = "form-control k-textbox" })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
    </div>

    <div class="k-edit-buttons k-state-default">
        @if (Model.CientContactId > 0)
        {
            <button type="button" class="k-button k-button-icontext k-primary k-grid-update" id="btnAddNewContact"><span class="k-icon k-update"></span>Update</button>
        }
        else
        {
            <button type="button" class="k-button k-button-icontext k-primary k-grid-update" id="btnAddNewContact"><span class="k-icon k-update"></span>Create</button>
        }
        <button type="button" class="k-button k-button-icontext k-grid-cancel" id="btnCancelNewContactWindow"><span class="k-icon k-cancel"></span>Cancel</button>
    </div>
</div>
<br/>
<script>
    $(document).ready(function () {
        telInput = $("#Contact");
        telInput.intlTelInput({
            geoIpLookup: function (callback) {
                $.get("http://ipinfo.io", function () { }, "jsonp").always(function (resp) {
                    var countryCode = (resp && resp.country) ? resp.country : "";
                    callback(countryCode);
                });
            },
            initialCountry: "auto",
            utilsScript: "../Scripts/intl-tel-input-master/build/js/utils.js"
        });
        var reset = function () {
            telInput.removeClass("error");
        };
        telInput.on("keyup change", reset);
    });
    $("#btnAddNewContact").click(function () {
        var validation = $("#divForNewContactAdd").kendoValidator({
            rules: {
                Contact: function (input) {
                    if (input.is("[name=Contact]")) {
                        if (!telInput.intlTelInput("isValidNumber")) {
                            return false;
                        }
                        if (input.val() === "") {
                            return false;
                        }
                    }
                    return true;
                }
            },
            messages: {
                Contact: "Please enter valid contact number",
            }
        }).data("kendoValidator");

        if (validation.validate()) {
            var sendData = {
                CientContactId: $("#CientContactId").val(),
                ClientId: $("#ClientId").val(),
                Contact: $("#Contact").intlTelInput("getNumber"),
                ContactTypeId: $("#ContactTypeId").val(),
                Comments: $("#Comments").val(),
                CreatedBy: userId,
            };
            $.ajax({
                url: '@Url.Action("AddClientContact", "CRMClient")',
                type: 'Post',
                data: sendData,
                success: function (nId) {
                    notification.hide();
                    notification.setOptions({
                        autoHideAfter: 2000
                    });
                    if (nId != '') {
                        $("#WinForUserDetails").data("kendoWindow").close();
                        if ('@Model.CientContactId' > 0) {
                            notification.show({
                                message: "contact information successfully updated", showTime: startTime(),
                            }, "upload-success");
                        } else {
                            notification.show({
                                message: "contact information successfully added", showTime: startTime(),
                            }, "upload-success");
                        }
                        $("#divForContactNumber").load('@Url.Action("_ClientContactInfoDisplay", "CRMClient")?Id=' + nId);
                    }
                    else {
                        notification.show({
                            message: "Update unsuccessful", showTime: startTime(),
                        }, "upload-error");
                        $("#WinForUserDetails").data("kendoWindow").close();
                    }
                }
            });
         }
    });
    $("#divForNewContactAdd").on("click", "#btnCancelNewContactWindow", function (e) {
        e.preventDefault();
        $("#WinForUserDetails").data("kendoWindow").close();
    });
</script>