@{
   FactoryManagement.Models.FactoryManagementEntities db = new FactoryManagement.Models.FactoryManagementEntities();
}
@using FactoryManagement.Helpers
<div class="row">
    <div class="col-md-12" id="DivForBankList">
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-list"></i>    <span id="headr_title" style="margin-top: 0px!important">Showing List of All Branches </span>
                </div>
            </div>
            <div class="portlet-body">

                <table class="table table-bordered" style="margin-bottom:0px!important;margin-top:10px!important;border-bottom:none!important;">
                    <tr>
                        <td>
                            <span style="padding-left:0px!important;">
                                <span class="autocomplete-wrapper">
                                    <input class="text-field" id="autocomplete" name="country" placeholder="Start typing branch name" type="text" autocomplete="off">
                                    <span class="k-icon k-i-search" style="margin-top:-25px;margin-right:10px;float:right;">&nbsp;</span>
                                </span>
                            </span>
                        </td>
                    </tr>
                </table>

                <div id="Div_All_Bank" style="display:none;"><div class="loading_partial"></div></div>
                @if (db.BankLists.Any())
                {
                    <script>
                        $("#Div_All_Bank").show();
                        $("#Div_All_Bank").load('@Url.Action("_AllBranchList", "Accounting")?BankId=' + '@ViewBag.BankId' + '&forDisplay=' + '@ViewBag.Display');
                    </script>
                }
            </div>
        </div>
    </div>
</div>
<div id="loading" style="display:none"></div>
<script id="temp_win_site_edit" type="text/x-kendo-template">
    <div style="padding:1em;">
        <p style="font-size: 14px; padding: 10px">#=message#</p>
        <div style="text-align: right;">
            <button type="button" class="k-button k-button-icontext k-primary k-grid-update" id="btn_editUnit_ok"><span class="k-icon k-update"></span>OK</button>
            <button type="button" class="k-button k-button-icontext k-grid-cancel" id="btn_editUnit_cancel"><span class="k-icon k-cancel"></span>Cancel</button>
        </div>
    </div>
</script>
<script>
    var showCount = 0, inCallback = false;
    var page = 0, totalCount = 0;
    var content = '';
    var branchId;
    var display = '@ViewBag.Display';

    $(window).scroll(function () {
        if ($(window).scrollTop() == $(document).height() - $(window).height()) {
            if (parseInt(showCount) < parseInt(totalCount)) {
                if (page > -1 && !inCallback) {
                    inCallback = true;
                    page++;;
                    $("div#loading").show();
                    loadMoreData(page);
                }
            }
        }
    });
    function loadMoreData(page) {
        $.ajax({
            type: 'GET',
            url: '/Accounting/GetBranchList',
            data: { page: page },
            success: function (data) {
                var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                if (data != '') {
                    for (var i = 0; i < data.length; i++) {
                        showCount++;
                        var date = new Date(data[i].CreatedDateName);
                        var getdate = (monthNames[date.getMonth()]) + " " + date.getDate() + "," + date.getFullYear();
                        var update = new Date(data[i].UpdatedDateName);
                        var getUpdate = (monthNames[update.getMonth()]) + " " + update.getDate() + "," + update.getFullYear();
                        $("#tbl_bank_list").append('<tr id="tr_bank_' + data[i].BranchId + '">' +

                    '<th scope="row">' + showCount + '.</th><td>' +
                    '<a href="/Accounting/BankAccountDetails?q=' + getDataEncrypted("Id=" + data[i].BranchId + "?forDisplay=1") + '">' + data[i].BranchName + '</a>' +
                    '</td>' +
                     '<td><img class="user-photo" src="/Images/UserPicture/thumb/' + data[i].CreatedByPicture + '">' +
                    ((data[i].CreatedBy == 1) ? ' ' + data[i].CreatedByName + '' :
                    '<a href="/HumanResource/DisplayEmployeeDetails?q=' + getDataEncrypted("UserId=" + data[i].CreatedBy + "?isDisplay=True") + '">' + data[i].CreatedByName + '</a>') +
                    '</td>' +
                     '<td>' + getdate + '</td>' +
                      '<td>' + ((data[i].UpdatedBy != null) ? ' ' + ((data[i].UpdatedBy > 0) ? '<img class="user-photo" src="/Images/UserPicture/thumb/' + data[i].UpdatedByPicture + '">' +
                        '<a href="/HumanResource/DisplayEmployeeDetails?q=' + getDataEncrypted("UserId=" + data[i].UpdatedBy + "?isDisplay=True") + '">' + data[i].UpdatedByName + '</a>' :
                         '<img class="user-photo" src="~/Images/UserPicture/thumb/' + data[i].UpdatedByPicture + '" />' + data[i].UpdatedByName + ' ') + '  ' : ' ' + "Not Yet Updated" + ' ') + '</td>' +
                        '<td>' + ((data[i].UpdatedDate == null) ? ' ' + "Not yet Updated" + ' ' : ' ' + getUpdate + '') + '</td>' +
                        '<td>' + ((data[i].ForDisplay > 0) ? ' <a  class="btn blue" data-toggle="tooltip" data-original-title="Branch Details"  href="/Accounting/BankAccountDetails?q=' + getDataEncrypted("Id=" + data[i].BranchId + "?forDisplay=1") + '" ><i class="fa fa-info-circle"></i></a> ' :
                        '<a class="btn green" data-id="' + data[i].BranchId + '" style="margin-right:.2em;" href="/Accounting/BankAccountDetails?q=' + getDataEncrypted("Id=" + data[i].BranchId + "?forDisplay=0") + '" data-toggle="tooltip" data-original-title="Edit Branch"><i class="fa fa-pencil"></i></a>' +
                          '<a class="btn btn-danger deletebranch" style="margin-right:.2em;" data-id="' + data[i].BranchId + '" id="deletebranch" data-toggle="tooltip" data-original-title="Delete Branch"><i class="fa fa-trash"></i></a>') +
                        '</td></tr>');
                        $('[data-toggle="tooltip"]').tooltip();
                    }
                }
                else {
                    page = -1;
                }
                inCallback = false;
                $("#loading").hide();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert(error);
            }
        });
    }
    $(function () {
        $("#autocomplete").autocomplete({
            minLength: 0,
            source: function (request, response) {
                content = $.trim(request.term);
                $.ajax({
                    url: '@Url.Action("SearchBranchList", "Accounting")',
                    type: "POST",
                    dataType: "json",
                    data: { prefix: content },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.BranchName, value: item.BranchName, id: item.BranchId };
                        }))
                    }
                })
            },
            minLength: 1,
            select: function (event, ui) {
                isloadFirstTime = true;
                var selectTextId = ui.item.id;
                $("#Div_All_Bank").load('@Url.Action("_AllBranchList", "Accounting")?BranchId='+ selectTextId +'&BankId='+'@ViewBag.BankId' + '&forDisplay=' + '@ViewBag.Display');
            },
        })
    .keyup(function () {
        if ($.trim($("#autocomplete").val()) == "") {
            showCount = 0; page = 0, totalCount = 0;
            $("#Div_All_Bank").load('@Url.Action("_AllBranchList", "Accounting")?BankId=' + '@ViewBag.BankId' + '&forDisplay=' + '@ViewBag.Display');
        }
    })
    .autocomplete("instance")._renderItem = function (ul, item) {
        var term = $.trim(this.term);
        var re = new RegExp("(" + term + ")", "gi"),
                   cls = "bold-text",
                   template = "<span class='" + cls + "'>$1</span>",
                   label = item.label.replace(re, template),
                   $li = $("<li/>").appendTo(ul);
        $("<span>").html(label).appendTo($li);
        return $li;
    };
    });
    @*$(function () {
        $("#autocomplete").autocomplete({
            minLength: 0,
            source: function (request, response) {
                content = $.trim(request.term);
                $.ajax({
                    url: '@Url.Action("SearchBranchList", "Accounting")',
                    type: "POST",
                    dataType: "json",
                    data: { prefix: content },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.BranchName, value: item.BranchName, id: item.BranchId };
                        }))
                    }
                })
            },
            minLength: 1,
            select: function (event, ui) {
                isloadFirstTime = true;
                var selectTextId = ui.item.id;
                $("#Div_All_Bank").load('@Url.Action("_AllBranchList", "Accounting")?BranchId=' + selectTextId + '&BankId=' + '@ViewBag.BankId' + '&forDisplay=' + '@ViewBag.Display');
            },
        })
    .keyup(function () {
        if ($.trim($("#autocomplete").val()) == "") {
            showCount = 0; page = 0, totalCount = 0;
            $("#Div_All_Bank").load('@Url.Action("_AllBranchList", "Accounting")BankId=' + '@ViewBag.BankId' + '&forDisplay=' + '@ViewBag.Display');
        }
    })
    .autocomplete("instance")._renderItem = function (ul, item) {
        var term = $.trim(this.term);
        var re = new RegExp("(" + term + ")", "gi"),
                   cls = "bold-text",
                   template = "<span class='" + cls + "'>$1</span>",
                   label = item.label.replace(re, template),
                   $li = $("<li/>").appendTo(ul);
        $("<span>").html(label).appendTo($li);
        return $li;
    };
    });*@

    //****************************(Delete Branch) Twice ? *******************************************
    @*$("#Div_All_Bank").on("click", "#deleteBranch", function (e) {
        e.preventDefault();
        branchId = $(this).data('id');
        $.ajax({
            url: '@Url.Action("CheckBranchExist", "Accounting")',
            type: 'Post',
            data: { BankId: branchId },
            success: function (data) {
                if (data) {
                    updateData();
                } else {
                    confirmation();
                }
            }
        });
    });
    function confirmation() {
        var kendoWindow = $("<div/>").kendoWindow({
            actions: ["Close"],
            title: "Alert",
            resizable: false,
            width: "30%",
            modal: true
        });
        message = "Are you sure you want to delete this bank?";
        var template = kendo.template($("#temp_win_site_edit").html());
        kendoWindow.data("kendoWindow").content(template).center().open();

        kendoWindow.find("#btn_editUnit_cancel").click(function () {
            kendoWindow.data("kendoWindow").close();
        }).end();

        kendoWindow.find("#btn_editUnit_ok").click(function () {
            kendoWindow.data("kendoWindow").close();
            deleteBranch();
        }).end();
    }
    function updateData() {
        var kendoWindow = $("<div/>").kendoWindow({
            actions: ["Close"],
            title: "Alert",
            resizable: false,
            width: "30%",
            modal: true
        });
        message = "Sorry, you can't delete this bank";
        var template = kendo.template($("#temp_win_site_edit").html());
        kendoWindow.data("kendoWindow").content(template).center().open();

        kendoWindow.find("#btn_editUnit_cancel").click(function () {
            kendoWindow.data("kendoWindow").close();
        }).end();
        kendoWindow.find("#btn_editUnit_ok").hide();
    }
    function deleteBranch() {
        var url = "/Accounting/DeleteBranch";
        $.post(url, { Id: branchId, CreatedBy: userId }, function (data) {
            notification.hide();
            notification.setOptions({ autoHideAfter: 2000 });
            if (data === "Error") {
                notification.show({
                    message: "Deletion unsuccessful", showTime: startTime()
                }, "upload-error");
            }
            else {
                notification.show({ message: "Bank successfully deleted", showTime: startTime() }, "upload-success");
                $("#Div_All_Bank").load('@Url.Action("_AllBranchList", "Accounting")BankId=' + '@ViewBag.BankId' + '&forDisplay=' + '@ViewBag.Display');
            }
        })
    };*@
</script>


