

@************************************** Created By Mabia Mishu (Date:30.07.2016)  ***************************************@
@model FactoryManagement.ModelView.Inventory.Store.StoreListsModelView
@{
    ViewBag.Title = "Add New Store";
    Layout = "~/Views/Shared/_LayoutForTemplate.cshtml";
    FactoryManagement.Models.FactoryManagementEntities db = new FactoryManagement.Models.FactoryManagementEntities();
}
<style>
    #toolTipForStoreName, #toolTipForStoreAcroynm {
        padding-left: 0px;
        padding-top: 2px;
        width: 1% !important;
        float: left;
    }
    .info {
        border-radius: 91%;
        height: 15px;
        width: 15px;
    }
    .tblDyn th, .tblDyn td{border:none!important;}
</style>
@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.Id)
    <div class="page-bar">
        <ul class="page-breadcrumb">
            <li>
                <i class="icon-basket"></i>
                <span>Inventory</span>
                <i class="fa fa-angle-right"></i>
            </li>
            <li>
                <i class="fa fa-gears"></i>
                <span>Configuration</span>
                <i class="fa fa-angle-right"></i>
            </li>
            <li>
                <i class="fa fa-th-list"></i>
                <a href="/Inventory/AllStoreLists">All Store Lists</a>
                <i class="fa fa-angle-right"></i>
            </li>
            @if (Model.Id > 0)
            {
                <li>
                    <i class="fa fa-plus"></i>
                    <a href="/Inventory/AddNewStore">Edit Store Details</a>
                </li>
            }
            else
            {
                <li>
                    <i class="fa fa-plus"></i>
                    <a href="/Inventory/AddNewStore">Add New Store</a>
                </li>
            }
            
        </ul>
    </div>
    <div class="portlet light bordered">
        <div class="portlet-title">

            <div class="caption font-green">
                <i class="fa fa-plus font-green"></i>
@if (Model.Id > 0)
{
    <span class="caption-subject bold uppercase">Edit Store Details</span>
}
else
{
    <span class="caption-subject bold uppercase">Add New Store</span>
}     
            </div>
        </div>
        <div class="portlet-body form">
            <div class="form-horizontal" id="Div_Add_Store">
                <div class="form-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StoreName, "Store Name", htmlAttributes: new { @class = "control-label col-md-2 col-sm-3" })
                        <div class="col-md-3 col-sm-4">
                            @Html.EditorFor(model => model.StoreName, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                            @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1 col-sm-1 col-xs-2" id="toolTipForStoreName">
                            <img src="~/Images/Icon/info 1.jpg" class="info" />
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StoreAcroynm, "Store Acroynm", htmlAttributes: new { @class = "control-label col-md-2 col-sm-3" })
                        <div class="col-md-3 col-sm-4">
                            @Html.EditorFor(model => model.StoreAcroynm, new { htmlAttributes = new { @class = "form-control k-textbox" } })
                            @Html.ValidationMessageFor(model => model.StoreAcroynm, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1 col-sm-1" id="toolTipForStoreAcroynm">
                            <img src="~/Images/Icon/info 1.jpg" class="info" />
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Select User", htmlAttributes: new { @class = "control-label col-md-2 col-sm-3" })
                        <div class="col-md-3 col-sm-4">
                            @(Html.Kendo().MultiSelect()
                .Name("UserLists")
                .HtmlAttributes(new { style = "width:100%" })
                .Events(e => e.Change("UserSelectChange").Select("UserSelect"))
                .BindTo(ViewBag.allUserList)
                .Value(ViewBag.displayUser)
                .AutoClose(false)
                .Placeholder("-- Select One --"))
                            @Html.ValidationMessage("UserLists", "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-10 col-sm-offset-2 col-sm-9" id="Div_Selected_User_List" style="padding-left:0px!important;">
                        @if (Model.Id > 0 && Model.AllAssignUserId != "")
                        {

                            var allUserList = (from m in db.AssignStoreWithUsers
                                               join v in db.View_UserLists on m.UserId equals v.UserId
                                               where m.StoreId == Model.Id
                                               select new
                                               {
                                                   UserId = v.UserId,
                                                   Username = v.UserName
                                               }).ToList();
                            foreach (var u in allUserList)
                            {
                                <div class="col-sm-3 selectedDiv" id="div_user_@u.UserId" data-id="@u.UserId" style="padding-left:0px!important;">
                                    <table class="table tblDyn" id="tbl_User_@u.UserId">
                                        <tr><th><span>@u.Username</span></th></tr>
                                        <tr><td><span>Select Unit To Assign </span></td></tr>
                                        <tr id="trAssignUnit_@u.UserId">
                                            <td>
                                                <input id="assignUnit_@u.UserId" name="assignUnit_@u.UserId" class="customers unit" data-id="@u.UserId" style="width: 90%;" />
                                                <span class="field-validation-valid text-danger" data-valmsg-for="assignUnit_@u.UserId" data-valmsg-replace="true"></span>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <script>
                                    $("#trAssignUnit_"+'@(u.UserId)').load('@Url.Action("_loadUserAssiegnedUnit", "Inventory")?uId='+'@(u.UserId)'+'&id='+'@(Model.Id)'+'&isStore=true');
                                </script>
                            }
                        }
                    </div>
                </div>
                <div class="form-actions">
                    <div class="row">
                        <div class="col-md-offset-2 col-md-10 col-sm-offset-3 col-sm-9">
                            <button type="button" class="btn green" id="btnStoreCreate">Create</button>
                            <button type="button" class="btn yellow" id="btnStoreRefresh">Refresh</button>
                            <button type="button" class="btn red" id="btnStoreCancel">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

  
}

<script>
    var AllSiteListsId="",msg="",time;
    $(document).ready(function () {
        $("#liForInventory").addClass('active');
        $('#liForInvenConfig').addClass('open');
        $('#liForInvenConfig .sub-menu').show();
        $("#liForStoreList").addClass('sublistActive');

        $("#top_header_link").append('<span>Inventory</span><span><i class="fa fa-angle-right fa-2x"></i></span>' +
               '<span><a href="/Inventory/AllStoreLists"> All Store Lists</a></span>'+
               '<span><i class="fa fa-angle-right fa-2x"></i></span>' +
               '<span class="current"><a href="/Inventory/AddNewStore"> Add New Store</a></span>');

        if ('@Model.Id' > 0) {
            $("#btnStoreCreate").val("Update");
            AllSiteListsId='@(Model.AllSiteLists)';
        }
        else{
            $("#Div_Selected_User_List").hide();
        }
    });
    $("#toolTipForStoreName").kendoTooltip({
        content: function () {
            return "Please Enter Store Name";
        },
        show: function (e) {
            e.sender.popup.element.addClass("k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error");
        },
        position: "right"
    });

    $("#toolTipForStoreAcroynm").kendoTooltip({
        content: function () {
            return "Please Enter Store Acroynm";
        },
        show: function (e) {
            e.sender.popup.element.addClass("k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error");
        },
        position: "right"
    });
    $("#btnStoreCancel").click(function () {
        location.href = '@Url.Action("AllStoreLists", "Inventory")';
    });
    $("#btnStoreRefresh").click(function(){
        if(@(Model.Id) > 0){
            location.href = '@Url.Action("AddNewStore", "Inventory")?id='+@(Model.Id);
        }else{
            location.reload();
        }
    })
</script>
<script>
    function UserSelect(e) {
        previous = this._savedOld;
        current = this.value();
        var diff = [];
        if (previous) {diff = $(previous).not(current).get();}
        this._savedOld = current.slice(0);
        if (diff.length > 0 && current != '') {$("#div_user_" + diff).remove();}
        else {
            var dataItem = this.dataSource.view()[e.item.index()];
            var UserId = dataItem.Value;
            if ($("#div_user_" + UserId).length == 0) {
                $("#Div_Selected_User_List").append('<div class="col-sm-3 selectedDiv" id="div_user_' + UserId + '" data-id="' + UserId + '" style="padding-left:0px!important;">' +
                    '<table class="table tblDyn" id="tbl_User_' + UserId + '">' +
                        '<tr>' +
                            '<th><span>' + dataItem.Text + '</span></th>'+
                        '</tr>' +

                        '<tr><td><span>Select Unit To Assign </span></td></tr><tr><td>' +
                        '<input id="assignUnit_' + UserId + '" name="assignUnit_' + UserId + '" class="customers unit" data-id="' + UserId + '" style="width: 90%;" />' +
                        '<span class="field-validation-valid text-danger" data-valmsg-for="assignUnit_' + UserId + '" data-valmsg-replace="true"></span></td></tr>'+

                    '</table>' +
                   '</div>');

                $("#assignUnit_" + UserId).kendoMultiSelect({
                    placeholder: "Select unit...",
                    dataTextField: "UnitName",
                    dataValueField: "UnitId",
                    dataSource: { transport: { read: { url: "@Url.Action("GetAllUnitName", "Inventory")" } } }
                });
            }
            $("#Div_Selected_User_List").show(); 
        }
    }
    function UserSelectChange(e) {
        previous = this._savedOld;
        current = this.value();
        var diff = [];
        if (previous) {
            diff = $(previous).not(current).get();
        }
        this._savedOld = current.slice(0);
        if (diff.length > 0) {
            $("#div_user_" + diff).remove();
            if (current == "") {
                $("#Div_Selected_User_List").hide();
                $("#Div_Selected_User_List").empty();
            }
            var id = diff.toString().split('-')[0];
        }
            
    }
</script>
<script>
    $("#btnStoreCreate").click(function () {
        var validation = $("#Div_Add_Store").kendoValidator({
            rules: {
                remote: function (input) {
                    var errormessage;
                    var remoteAttr = input.attr("data-val-remote-url");
                    if (typeof remoteAttr === typeof undefined || remoteAttr === false) {
                        return true;
                    }
                    var isInvalid;
                    var data = {};
                    var Id = $("#Id").val();
                    var StoreName = $("#StoreName").val();
                    if (input.attr('name') === "StoreName") {
                        data = { Id: Id, StoreName: StoreName };
                    }
                    $.ajax({
                        url: remoteAttr,
                        mode: "abort",
                        port: "validate" + input.attr('name'),
                        dataType: "json",
                        type: input.attr("data-val-remote-type"),
                        data: data,
                        async: false,
                        success: function (response) {
                            isInvalid = response;
                            if (isInvalid === true) {
                                isInvalid = true;
                            }
                            else {
                                isInvalid = false;
                            }
                        }
                    });
                    return isInvalid;
                },
                selectSiteList: function (input) {
                    if (input.is("[name=UserLists]")) {
                        var ms = input.data("kendoMultiSelect");
                        if (ms.value().length === 0) {
                            return false;
                        }
                    }
                    return true;
                },
                selectUnitList: function (input) {
                    if ((input.attr("class") === 'customers unit') || (input.attr("class") === 'customers unit k-valid') || (input.attr("class") === 'customers unit k-invalid')) {
                        var id = input.attr("id");
                        if ($("#"+id).data("kendoMultiSelect").value().length === 0) {
                            return false;
                        } else {
                            isValid = true;
                        }
                    }
                    return true;
                }
            },
            messages: {
                remote: function (input) {return input.data('val-remote');},
                selectSiteList:"Please select atleast one user",
                selectUnitList: "Please select atleast one unit"
            }
        }).data("kendoValidator");
        if (validation.validate()) {
            notification.show({ message: "New store is adding....", showTime: startTime() }, "upload-progress");
            var AllUserId=[],AllUnitId=[];
            var url="",sendData="";
            if(@(Model.Id) > 0){
                url='@Url.Action("EditStoreData", "Inventory")';
                $(".unit").each(function(){
                    if($(this).attr("id") != undefined){
                        var id= $(this).attr("id").split('_')[1];
                        AllUserId.push(id);
                        AllUnitId.push($("#assignUnit_"+id).data("kendoMultiSelect").value().join(","));
                    }
                });
                sendData = {
                    Id:$("#Id").val(),
                    StoreName: $("#StoreName").val(),
                    StoreAcroynm: $("#StoreAcroynm").val(),
                    AllUserId:AllUserId,
                    AllUnitId:AllUnitId,
                    CreatedBy: userId
                };

            }else{
                url='@Url.Action("SaveNewStoreData", "Inventory")';
                $("input.unit").each(function(){
                    var id = $(this).data('id');
                    AllUserId.push(id);
                    AllUnitId.push($("#assignUnit_"+id).data("kendoMultiSelect").value().join(","));
                });
                 sendData = {
                    Id:$("#Id").val(),
                    StoreName: $("#StoreName").val(),
                    StoreAcroynm: $("#StoreAcroynm").val(),
                    AllUserId:AllUserId,
                    AllUnitId:AllUnitId,
                    CreatedBy: userId
                };
            }
            $.ajax({
                url: url,
                type: 'Post',
                data: sendData,
                success: function (data) {
                    notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                    if (data === "Error") {
                        if(@(Model.Id) > 0){
                            notification.show({ message: "Store '"+sendData.StoreName+"' information update was unsuccessful.", showTime: startTime() }, "upload-error");
                        }else{
                            notification.show({ message: "Add new store '"+sendData.StoreName+"' was unsuccessful.", showTime: startTime() }, "upload-error");
                        }
                    } else {
                        if(@(Model.Id) > 0){
                            notification.show({ message: "Store '"+sendData.StoreName+"' information has been successfully updated. ", showTime: startTime() }, "upload-success");
                        }else{
                            notification.show({ message: "New store '"+sendData.StoreName+"' has been successfully created. ", showTime: startTime() }, "upload-success");
                        }
                        location.href='@Url.Action("AllStoreLists", "Inventory")';
                    }
                },
                error:function(err){
                    notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                    notification.show({ message: "Error occurred.", showTime: startTime() }, "upload-warning");
                }
            });
        }
    });
</script>
