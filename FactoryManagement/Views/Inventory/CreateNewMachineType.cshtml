
@model FactoryManagement.ModelView.Inventory.Mahinaries.MachineTypeNameModelView
<style>
    #div_for_machine_type_create .editor-label {
        width: 30% !important;
    }
</style>
<div class="k-edit-form-container col-lg-11 col-md-10 col-sm-11 col-xs-10" id="div_for_machine_type_create" style="margin-bottom:4%;margin-top:2%;">
    <div class="editor-label"><label for="MachineTypeName1">Machine Type Name</label></div>
    <div class="editor-field">
        @Html.EditorFor(model => model.MachineTypeName1, new { htmlAttributes = new { @class = "k-textbox" } })
        @Html.ValidationMessageFor(model => model.MachineTypeName1, "", new { @class = "text-danger" })
    </div>
    <div class="k-edit-buttons k-state-default">
        @if (Model.MachineId != 0)
        {
            <button type="button" class="k-button k-button-icontext k-primary k-grid-update" id="btnCreate"><span class="k-icon k-update"></span>Update</button>
        }
        else
        {
            <button type="button" class="k-button k-button-icontext k-primary k-grid-update" id="btnCreate"><span class="k-icon k-update"></span>Create</button>
        }
        <button type="button" class="k-button k-button-icontext k-grid-cancel" id="btnCancel"><span class="k-icon k-cancel"></span>Cancel</button>
    </div>

</div>
<script>
    var validation = $("#div_for_machine_type_create").kendoValidator({
        rules: {
            remote: function (input) {
                var remoteAttr = input.attr("data-val-remote-url");
                if (typeof remoteAttr === typeof undefined || remoteAttr === false) {
                    return true;
                }
                var isInvalid;
                var data = {};
                var MachineId = '@Model.MachineId';
                var MachineTypeName1 = $.trim($("#MachineTypeName1").val());
                $("#MachineTypeName1").val(MachineTypeName1);
                if (input.attr('name') === "MachineTypeName1") {
                    data = { MachineId: MachineId, MachineTypeName1: MachineTypeName1 };
                }
                $.ajax({
                    url: remoteAttr,
                    mode: "abort",
                    port: "validate" + input.attr('name'),
                    dataType: "json",
                    type: input.attr("data-val-remote-type"),
                    data: data,
                    async: false,
                    success: function (response) {
                        isInvalid = response;
                        if (isInvalid == true) {
                            isInvalid = true;
                        }
                        else {
                            isInvalid = false;
                        }
                    }
                });
                return isInvalid;
            }
        },
        messages: {
            remote: function (input) {
                return input.data('val-remote');
            }
        }
    }).data("kendoValidator");

    $("#btnCreate").click(function (e) {
        e.preventDefault();
        var msg = "";
        if (validation.validate()) {
            var sendData = {
                MachineId: '@Model.MachineId', MachineTypeName1: $("#MachineTypeName1").val(),
                CreatedBy: userId
            };
            msg = ('@Model.MachineId' > 0) ? "Updating machine type information" : "Creating new machine Type";
            notification.show({
                message: msg,
                showTime: startTime(),
            }, "upload-progress");
            $.ajax({
                url: '@Url.Action("MachineTypeCreateSave", "Inventory")',
                type: 'Post',
                data: sendData,
                success: function (response) {

                    notification.hide();
                    notification.setOptions({
                        autoHideAfter: 5000
                    });
                    if (response === "Success") {
                        if ($("#MachineId").val() > 0) {
                            msg = "Machine type information successfully updated";
                        } else {
                            msg = "Machine type has been successfully created";
                        }
                        notification.show({
                            message: msg, showTime: startTime(),
                        }, "upload-success");

                        $("#divForAll_Machine_type").empty();
                        $("#divForAll_Machine_type").append('<div class="loading_partial"></div>');
                        $("#divForAll_Machine_type").load('@Url.Action("_ShowAllMachineType", "Inventory")');
                    }
                    else {
                        msg = "Machine type create attempt unsuccessful";
                        notification.show({
                            message: msg, showTime: startTime()
                        }, "upload-error");
                    }
                    $("#btnCreate").closest(".k-window-content").data("kendoWindow").close();
                    $("#div_for_pro_type_create").empty();
                    //$(this).closest(".k-window-content").data("kendoWindow").close();
                },
                error: function (err) {
                    notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                    notification.show({ message: "Error occurred.", showTime: startTime() }, "upload-warning");
                }
            });
        }
    });
    $("#btnCancel").click(function () {
        $(this).closest(".k-window-content").data("kendoWindow").close();
    });
</script>
