@model FactoryManagement.ModelView.Inventory.StoreItemDispatchedHistoryModelView
@{
    ViewBag.Title = "Routed History Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    FactoryManagement.Models.FactoryManagementEntities db = new FactoryManagement.Models.FactoryManagementEntities();
    int count = 0;
    var list = db.View_Dispacth_Item_Details.Where(m => m.DispatchedId == Model.Id).ToList();
    var lists = (from bs in list
                 group bs by bs.InventoryId into g
                 orderby g.Sum(x => x.Quantity)
                 select new FactoryManagement.ModelView.Inventory.Store.View_Dispacth_Item_DetailsModelView
                 {
                     Id = g.FirstOrDefault().Id,
                     DispatchedId = g.FirstOrDefault().DispatchedId,
                     Name = g.FirstOrDefault().Name,
                     VoucherName = g.FirstOrDefault().VoucherName,
                     ProductName = g.FirstOrDefault().ProductName,
                     InventoryId = g.FirstOrDefault().InventoryId,
                     LocationId = g.FirstOrDefault().LocationId,
                     Quantity = g.FirstOrDefault().Quantity,
                     UnitId = g.FirstOrDefault().UnitId.Value,
                     UnitName = g.FirstOrDefault().UnitName,
                     ReturnQuantity = g.FirstOrDefault().ReturnQuantity,
                     OrderId = g.FirstOrDefault().OrderId,
                     MachineId = g.FirstOrDefault().MachineId,
                     Site_Unit_Id = g.FirstOrDefault().Site_Unit_Id,
                     DeptId = g.FirstOrDefault().DeptId,
                     LineId = g.FirstOrDefault().LineId,
                     DispatchedDate = g.FirstOrDefault().DispatchedDate.Value,
                     DispatchedBy = g.FirstOrDefault().DispatchedBy.Value,
                     DispatchedDateName = g.FirstOrDefault().DispatchedDateName,
                     DispatchedUserName = g.FirstOrDefault().DispatchedUserName,
                     DispatchedUserPic = g.FirstOrDefault().DispatchedUserPic,
                     Total_Quantity = g.Sum(x => x.Quantity),
                     Total_Return = g.Sum(x => x.ReturnQuantity.Value),
                     Total_UsedQuan = g.Sum(x => x.UsedQuan.Value)
                 }).OrderBy(o => o.DispatchedDate).ToList();
    var fact_info = db.FactoryInformations.FirstOrDefault();
}

<section class="content-header" style="text-align:center;">
    <h3>Routed Details</h3>
    <p>@fact_info.Name</p>
    <p>Fax : @fact_info.Fax</p>
    <p>Email : @fact_info.Email</p>
</section>
<div class="row">
    <div class="col-xs-offset-6 col-xs-6 text-right">
        <h1><small>@Model.VoucherName</small></h1>
        <p>
            Routed Date : @Convert.ToDateTime(Model.DispatchedDate).ToString("MMM dd, yyyy hh:mm tt")<br>
            Routed By : @Model.DispatchUserName <br>
            Generated Date : @DateTime.Now.ToString("MMM dd, yyyy hh:mm tt") <br>
            Generated By : @Model.DispatchUserName<br>
        </p>
    </div>
</div>
@foreach (var m in lists)
{
    count++;
    string impname = m.ProductName;
    if (db.Inventory_Item_Location.Where(i => i.LocationId == m.LocationId && i.ImportId > 0).Any())
    {
        var impId = db.Inventory_Item_Location.Where(i => i.LocationId == m.LocationId).Select(i => i.ImportId).FirstOrDefault();
        impname = impname + " ( L/C : " + db.Import_History.Where(imp => imp.ImportId == impId).Select(imp => imp.L_C).FirstOrDefault() + " )";
    }
    var receivedUserList = db.DispatchedItemAssignUsers.Where(d => d.DispatchItemId == m.Id).ToList();
    var allUser = (from d in db.DispatchedItemAssignUsers
                   join u in db.View_UserLists on d.UserId equals u.UserId
                   where d.DispatchId == Model.Id && (d.MachineId == m.MachineId || d.OrderId == m.OrderId)
                   select new
                   {
                       UserId = d.UserId,
                       Username = db.View_UserLists.Where(o => o.UserId == d.UserId).Select(o => o.UserName).FirstOrDefault(),
                       Userpic = db.View_UserLists.Where(o => o.UserId == d.UserId).Select(o => o.Picture).FirstOrDefault()
                   }).ToList();

    var allDisList = db.View_Dispacth_Item_Details.Where(v => v.InventoryId == m.InventoryId && v.DispatchedId == Model.Id).ToList();
    var allReQuanList = db.View_Dispacth_Item_Details.Where(v => v.InventoryId == m.InventoryId && v.DispatchedId == Model.Id && v.ReturnQuantity > 0).ToList();
    <table class="table table-bordered" style="margin-bottom:30px!important;border:2px solid black;">
        @if (count == 1)
        {
            <thead>
                <tr>
                    <th width="5%">SL.</th>
                    <th width="40%">Name</th>
                    <th width="20%">Qty</th>
                    <th width="20%">Return Qty</th>
                    <th width="15%">Total Used Qty</th>
                </tr>
            </thead>
        }
        <tr>
            <th width="5%">@count.</th>
            <th width="40%">@impname</th>
            <td class="text-right" width="20%">@m.Total_Quantity @m.UnitName</td>
            <td class="text-right" width="20%">@m.Total_Return @m.UnitName</td>
            <td class="text-right" width="15%">@m.Total_UsedQuan @m.UnitName</td>
        </tr>
        @if (allDisList.Count() > 0)
        {
            int dQun = 0;
            <tr><td colspan="5">Assigned Quantity Details</td></tr>
            <tr class="child_tr">
                <td colspan="5">
                    <span class="col-xs-1"></span>
                    <span class="col-xs-1">#</span>
                    <span class="col-xs-2">Quantity</span>
                    <span class="col-xs-3">Assigned With</span>
                    <span class="col-xs-5">Received By</span>
                </td>
            </tr>
            foreach (var item in allDisList)
            {
                int userCount = 0;
                dQun++;
                string assignedWith = "";
                var receivedUserLists = db.DispatchedItemAssignUsers.Where(v => v.DispatchItemId == item.Id).ToList();
                if (item.StoreId > 0)
                {
                    assignedWith = "Store : " + db.StoreLists.Where(v => v.Id == item.StoreId).Select(v => v.StoreName).FirstOrDefault();
                }
                if (item.WareId > 0)
                {
                    assignedWith = "Warehouse : " + db.WarehouseLists.Where(v => v.Id == item.WareId).Select(v => v.WarehouseName).FirstOrDefault();
                }
                <tr class="child_tr">
                    <td colspan="5">
                        <span class="col-xs-1"></span>
                        <span class="col-xs-1">@dQun.</span>
                        <span class="col-xs-2">@item.Quantity @item.UnitName</span>
                        <span class="col-xs-3">@assignedWith</span>
                        <span class="col-xs-5">
                            @if (receivedUserLists.Count() == 0)
                            {
                                receivedUserLists = db.DispatchedItemAssignUsers.Where(v => v.DispatchId == item.DispatchedId).ToList();
                            }
                            @foreach (var u in receivedUserLists)
                            {
                                userCount++;
                                var userInfo = db.View_UserLists.Where(v => v.UserId == u.UserId).FirstOrDefault();
                                <span style="width:100%!important;font-weight:normal;">@userCount. @userInfo.UserName</span>
                            }
                        </span>
                    </td>
                </tr>
            }
        }

        @if (allReQuanList.Count() > 0)
        {
            int dQun = 0;
            <tr><td colspan="5">Return Quantity Details</td></tr>
            <tr class="child_tr">
                <td colspan="5">
                    <span class="col-xs-1"></span>
                    <span class="col-xs-1">#</span>
                    <span class="col-xs-3">Return Quantity</span>
                    <span class="col-xs-3">Last Return By</span>
                    <span class="col-xs-4">Return Date</span>
                </td>
            </tr>
            foreach (var item in allReQuanList)
            {
                dQun++;
                <tr class="child_tr">
                    <td colspan="5">
                        <span class="col-xs-1"></span>
                        <span class="col-xs-1">@dQun.</span>
                        <span class="col-xs-3">@item.ReturnQuantity @item.UnitName</span>
                        <span class="col-xs-3">@item.ReturnUserName</span>
                        <span class="col-xs-4">@item.ReturnDateName</span>
                    </td>
                </tr>
            }
        }
    </table>
}