@************************************************** Created By Jerin Jahan Date(17.11.2016) *****************************************@
@using FactoryManagement.Helpers;

@model IEnumerable<FactoryManagement.ModelView.Inventory.InventoryListModelView>
@{
    FactoryManagement.Models.FactoryManagementEntities db = new FactoryManagement.Models.FactoryManagementEntities();
    int count = 0;
}
<style>
    .imgresize {
        border: 2px solid #ddd;
    }

    #tbl_pro_list .btn {
        font-size: 12px !important;
    }

    #tbl_pro_list p {
        font-size: 13px !important;
        margin-bottom: 0px !important;
        color: #999;
    }

    .tr_pro:hover {
        border: 1px solid #eaeaea;
        -webkit-box-shadow: 0 0 10px rgba(0,0,0, .65);
        -moz-box-shadow: 0 0 10px rgba(0,0,0, .65);
        box-shadow: 0 0 10px rgba(0,0,0, .65);
    }

    .tr_pro .col-sm-8 .col-sm-7 {
        width: 55%;
        border-right: 1px dotted #ddd;
        padding: 0px !important;
        margin-right: 15px;
    }
</style>

@if (Model.Count() == 0)
{
    <div id="unavailable"><label>There is no product to display.</label></div>
}
else
{
    <table class="table allProductTable" id="tbl_pro_list">
        @foreach (var item in Model)
        {
            if (item.Quantity > 0)
            {
                count++;
                var multipleList = (from m in db.Inventory_Item_Location
                                    where m.InventoryId == item.InventoryId && m.ImportId == item.ImportId
                                    group m by new
                                    {
                                        m.StoreId,
                                        m.WarehouseId
                                    } into i
                                    select new
                                    {
                                        LocationId = i.FirstOrDefault().LocationId,
                                        StoreId = i.FirstOrDefault().StoreId,
                                        WareId = i.FirstOrDefault().WarehouseId,
                                        StoreName = (i.FirstOrDefault().StoreId > 0) ? db.StoreLists.Where(sm => sm.Id == i.FirstOrDefault().StoreId).Select(sm => sm.StoreName).FirstOrDefault() : "",
                                        WareName = (i.FirstOrDefault().WarehouseId > 0) ? db.WarehouseLists.Where(sm => sm.Id == i.FirstOrDefault().WarehouseId).Select(sm => sm.WarehouseName).FirstOrDefault() : "",
                                        Quantity = i.Sum(x => x.Quantity)
                                    }).ToList();
                string imgname = db.Inventory_Image_Lists.Where(m => m.InventoryId == item.InventoryId).Select(m => m.ImageName).FirstOrDefault();
                int multiCount = 1;
                int added_qun = 0;
                int max_quan = Convert.ToInt32(item.Quantity);
                <tr class="tr_pro" style="border:1px solid #ddd;">
                    <td class="col-md-1 col-sm-2" style="display:table-cell; vertical-align:middle; text-align:center;">
                        @if (imgname != null)
                        {<img class="imgresize" src="~/Images/Inventory/Store/Resize/@imgname" />}
                        else
                        {<img class="imgresize" src="~/Images/Inventory/Store/no_img.jpg" />}
                    </td>
                    <td class="col-sm-8">
                        <div class="col-sm-7 col-xs-12">
                            <a href="@Html.EncodedParam("StoreProductWithLCDetails", "StoreProduct", new { id = item.LocationId}, null)">
                                <label class="name" id="lbl_Proname_@item.LocationId">@item.ProductName (L/C : @item.LC)</label>
                            </a>
                            <p class="lblProDesc">Staple @Html.DisplayFor(modelItem => item.Description)</p>
                            @if (item.Model != null)
                            {
                                <p>Model : @item.Model</p>
                            }
                            @if (item.Brand != null)
                            {
                                <p>Brand : @item.Brand</p>
                            }
                            @if (item.CountryName != null)
                            {
                                <p>From @item.CountryName</p>
                            }
                            <p>
                                <span>Total Quantity : @item.Quantity @item.UnitName</span>
                                @if (item.ReservedQuantity != null)
                                {
                                    <span style="color:#ff0000;"> Reserved : @item.ReservedQuantity @item.UnitName</span>
                                }
                            </p>
                        </div>
                        <div class="col-sm-5" style="padding:0px!important;">
                            @foreach (var multi in multipleList)
                            {
                                var lname = "";
                                <div>
                                    <div class="col-xs-7" style="padding:0px!important;">
                                        <p>
                                            <strong>@multiCount.</strong>
                                            @if (multi.StoreId > 0)
                                            {
                                                lname = multi.StoreName;
                                                <span>@multi.StoreName</span>
                                            }
                                            else
                                            {
                                                lname = multi.WareName;
                                                <span>@multi.WareName</span>
                                            }
                                        </p>
                                        <p>Quantity : <span id="spn_quan_@multi.LocationId">@multi.Quantity</span> @item.UnitName</p>
                                    </div>
                                    @if (Convert.ToDouble(multi.Quantity) > 0)
                                    {
                                        int locid = multi.LocationId;
                                        <div class="col-xs-5" style="padding:0px!important;">
                                            <input type="button" value="Add To Cart"
                                                   class="btn btn-default cartItemOrder"
                                                   id="btnOrder_@locid"
                                                   data-quan="@multi.Quantity"
                                                   data-locationid="@locid"
                                                   data-multiple="1"
                                                   data-locname="@lname"
                                                   data-showplus="true"
                                                   data-name="@item.ProductName (L/C : @item.LC)"
                                                   data-picture="@item.ProductImageName"
                                                   data-quantity="@item.Quantity"
                                                   data-unitname="@item.UnitName" />
                                            <div id="divForOrder_@locid" style="display:none;font-size:16px;">
                                                <span class="fa fa-minus cartItemMinus" id="minusIcon_@locid"
                                                      data-locationid="@locid" data-multiple="1" style="cursor:pointer;"></span>
                                                <span class="ProductInCart" id="cart_@locid">@added_qun</span>
                                                <input class="k-textbox txt_quantity" style="width:40%!important;display:none;"
                                                       data-max="@multi.Quantity"
                                                       data-locationid="@locid" data-multiple="1"
                                                       data-val-required="Please enter amount"
                                                       id="txt_quan_@locid" name="txt_quan_@locid"
                                                       value="@added_qun"
                                                       type="text" onkeypress="return cartQuan(event, this.value)">
                                                <span class="fa fa-plus cartItemPlus"
                                                      id="addIcon_@locid"
                                                      data-locationid="@locid" data-multiple="1"
                                                      style="cursor:pointer;"></span>
                                            </div>
                                        </div>
                                    }
                                </div>
                                    multiCount++;
                            }
                        </div>
                    </td>
                </tr>
            }
            else
            {
                @*<h4>Product out of Stock.</h4>*@
            }
        }
    </table>
}
<script>
    $(document).ready(function () {
        $('.imgresize').nailthumb({ width: 150, height: 150 });
        showCount = '@(count)';
        totalCount = '@(ViewBag.Count)';
        $("#showItem").text(showCount);
        if (alllocId.length > 0) {
            for (var i = 0; i < alllocId.length; i++) {
                var max = $("#btnOrder_" + alllocId[i]).data('quan');
                $("#btnOrder_" + alllocId[i]).hide();
                $("#divForOrder_" + alllocId[i]).show();
                $("#cart_" + alllocId[i]).text(allquan[i]);
                if (parseInt(allquan[i]) > parseInt(max) || parseInt(allquan[i]) == parseInt(max)) {
                    $("#addIcon_" + alllocId[i]).hide();
                }
            }
        }
    });
    function updateData(quan, locid) {
        if ($('#cart_' + locid).length === 1) {
            $('#cart_' + locid).text(quan);
            if (!isCartShow) {
                $("#Div_without_Cart").removeClass('form-horizontal col-lg-12 col-md-12 col-sm-12 col-xs-12');
                $("#Div_without_Cart").addClass('form-horizontal col-lg-10 col-md-10 col-sm-9 col-xs-12');
                $("#divForAddtoCart").addClass('col-md-2 col-sm-3 col-xs-12 noPadding');
                $("#divForAddtoCart").show();
                $("#DivForCartList").show();
                $("#OrderForPurchase").show();
                $("#showCart").hide();
                isCartShow = true;
            }
        }
        $('#quentityInArrow_' + locid).text(quan);
        $("#itemCount").text(alllocId.length);
    }
    $("#tbl_pro_list").on("change", ".txt_quantity", function () {
        var addcart, showPlus = 0;
        var locid = $(this).data('locationid');
        var multiple = $(this).data("multiple");
        var typeValue = $(this).val();
        var maxQuan = $(this).data('max');
        if (typeValue === '') {
            typeValue = 0;
        }
        if (typeValue == '0') {
            $("#btnOrder_" + locid).show();
            $("#divForOrder_" + locid).hide();
            $("#dynTRforCart_" + locid).remove();
            $('#addIcon_' + locid).show(); showPlus = true;
            for (var j = 0; j < alllocId.length; j++) {
                if (locid === alllocId[j]) {
                    alllocId.splice(j, 1);
                    allName.splice(j, 1);
                    allquan.splice(j, 1);
                    allunit.splice(j, 1);
                    allIdCount.splice(j, 1);
                }
            }
            $("#itemCount").text(parseInt($("#itemCount").text()) - 1);
        } else {
            if (parseInt(typeValue) > parseInt(maxQuan)) {
                var kendoWindow = $("<div />").kendoWindow({
                    actions: ["Close"],
                    title: "Alert",
                    resizable: false,
                    width: "30%",
                    modal: true
                });
                var data = 'Quantity can not be greater than ' + maxQuan;
                var template = kendo.template($("#temp_alert").html());
                kendoWindow.data("kendoWindow").content(template(data)).center().open();
                kendoWindow.find("#btnOkAlert").click(function () {
                    kendoWindow.data("kendoWindow").close();
                }).end()

                $(this).val(maxQuan);
                updateData(maxQuan, locid);
                $('#addIcon_' + locid).hide();
                showPlus = false;
                addcart = maxQuan;
            } else {
                updateData(typeValue, locid);
                addcart = typeValue;
                showPlus = true;
                if (parseInt(typeValue) == parseInt(maxQuan)) {
                    $('#addIcon_' + locid).hide(); showPlus = false;
                } else {
                    $('#addIcon_' + locid).show(); showPlus = true;
                }
            }
            $("#cart_" + locid).show();
            $("#txt_quan_" + locid).hide();
            for (var i = 0; i < alllocId.length; i++) {
                if (locid === alllocId[i]) {
                    allquan[i] = (addcart);
                }
            }
        }
        if (alllocId.length === 0) {
            $("#btnPurchaseOrder").show();
        }

    });
    $("#tbl_pro_list").on("click", ".ProductInCart", function () {
        var id = $(this).attr('id').split('_')[1];
        $("#cart_" + id).hide();
        $("#txt_quan_" + id).show();
    });
</script>